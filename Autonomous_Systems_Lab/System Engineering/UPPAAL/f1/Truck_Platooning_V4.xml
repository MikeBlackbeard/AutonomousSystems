<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.

const int N = 3;
typedef int[0,N-1] id_t;

int distance = 1;

bool platooning_ = false;

chan appr[N];
chan beMaster, beSlave1, beSlave2, ChangeMaster, TakeMaster, LeaveMaster, ChangeSlave, TakeSlave, 
	LeaveSlave2, LeaveSlave1, ChangeSlave2, TakeSlave2, intruder_income_1, intruder_income_2,
	leave_intruder_1, leave_intruder_2;</declaration><template><name x="5" y="5">platooning</name><declaration>// Place local declarations here.

id_t list[N+1];
int[0,N] len;
bool Master_ = false;
bool Slave_ = false;
bool Slave2_ = false;

int intrpos_1 = 0;
int intrpos_2 = 0;

void enqueue(id_t element)
{
	list[len++] = element;
}

void unqueue(id_t element)
{
    
}

id_t front()
{
    return list[0];
}</declaration><location id="id0" x="80" y="328"><committed/></location><location id="id1" x="312" y="-152"><committed/></location><location id="id2" x="144" y="-152"><committed/></location><location id="id3" x="144" y="104"><name x="134" y="74">Idle</name></location><init ref="id3"/><transition><source ref="id3"/><target ref="id3"/><label kind="guard" x="-288" y="136">Slave_ == true &amp;&amp; intrpos_1 == 0</label><label kind="synchronisation" x="-208" y="151">intruder_income_1?</label><label kind="assignment" x="-160" y="168">intrpos_1++</label><nail x="-80" y="128"/><nail x="-80" y="184"/></transition><transition><source ref="id0"/><target ref="id3"/><label kind="synchronisation" x="120" y="336">TakeSlave!</label><nail x="224" y="328"/></transition><transition><source ref="id3"/><target ref="id0"/><label kind="guard" x="80" y="240">Slave2_ == true</label><label kind="synchronisation" x="80" y="257">ChangeSlave2!</label><label kind="assignment" x="80" y="272">Slave2_ = false</label></transition><transition><source ref="id3"/><target ref="id3"/><label kind="guard" x="256" y="336">Slave2_ == false</label><label kind="synchronisation" x="256" y="351">LeaveSlave1!</label><label kind="assignment" x="256" y="368">Slave_ = false</label><nail x="352" y="328"/><nail x="256" y="328"/></transition><transition><source ref="id3"/><target ref="id3"/><label kind="synchronisation" x="-64" y="336">LeaveSlave2!</label><label kind="assignment" x="-64" y="351">Slave2_ = false</label><nail x="-72" y="328"/><nail x="40" y="328"/></transition><transition><source ref="id1"/><target ref="id3"/><label kind="synchronisation" x="216" y="-80">TakeSlave!</label><label kind="assignment" x="216" y="-64">Slave2_ = false</label></transition><transition><source ref="id2"/><target ref="id1"/><label kind="guard" x="168" y="-182">Slave2_ == true</label><label kind="synchronisation" x="168" y="-167">ChangeSlave!</label><label kind="assignment" x="168" y="-152">Slave2_ = false</label></transition><transition><source ref="id3"/><target ref="id3"/><label kind="guard" x="-184" y="-96">Slave_ == false</label><label kind="synchronisation" x="-184" y="-81">LeaveMaster!</label><label kind="assignment" x="-184" y="-66">Master_ = false</label><nail x="-80" y="-144"/><nail x="-80" y="-32"/></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="-16" y="-144">Slave2_ == false</label><label kind="synchronisation" x="-8" y="-128">TakeMaster!</label><label kind="assignment" x="8" y="-112">Slave_ = false</label><nail x="-32" y="-152"/></transition><transition><source ref="id3"/><target ref="id2"/><label kind="guard" x="112" y="-48">Slave_ == true</label><label kind="synchronisation" x="112" y="-33">ChangeMaster!</label></transition><transition><source ref="id3"/><target ref="id3"/><label kind="guard" x="376" y="128">Master_ == true and
Slave_ == true</label><label kind="synchronisation" x="376" y="160">beSlave2!</label><label kind="assignment" x="376" y="176">Slave2_ = true</label><nail x="368" y="128"/><nail x="368" y="192"/></transition><transition><source ref="id3"/><target ref="id3"/><label kind="guard" x="376" y="32">Master_ == true and 
Slave_ == false</label><label kind="synchronisation" x="376" y="64">beSlave1!</label><label kind="assignment" x="376" y="80">Slave_ = true</label><nail x="368" y="24"/><nail x="368" y="104"/></transition><transition><source ref="id3"/><target ref="id3"/><label kind="guard" x="376" y="-110">Master_ == false</label><label kind="synchronisation" x="376" y="-95">beMaster!</label><label kind="assignment" x="376" y="-80">Master_ = true</label><nail x="368" y="-126"/><nail x="368" y="-46"/></transition><transition><source ref="id3"/><target ref="id3"/><label kind="select" x="-136" y="40">e:id_t</label><label kind="synchronisation" x="-136" y="56">appr[e]?</label><nail x="-80" y="24"/><nail x="-80" y="104"/></transition></template><template><name>truck</name><parameter>const id_t id</parameter><declaration>clock x;
</declaration><location id="id4" x="-168" y="184"><name x="-178" y="154">SecondSlave</name></location><location id="id5" x="-80" y="32"><name x="-90" y="2">FirstSlave</name></location><location id="id6" x="-80" y="-152"><name x="-90" y="-182">MasterTruck</name></location><location id="id7" x="-304" y="32"><name x="-344" y="24">Que</name></location><location id="id8" x="-304" y="-152"><name x="-360" y="-176">Ready</name></location><init ref="id8"/><transition><source ref="id5"/><target ref="id8"/><label kind="synchronisation" x="-8" y="-296">ChangeSlave2?</label><nail x="88" y="48"/><nail x="96" y="-272"/><nail x="-328" y="-272"/></transition><transition><source ref="id5"/><target ref="id8"/><label kind="synchronisation" x="-184" y="-264">LeaveSlave1?</label><nail x="48" y="24"/><nail x="48" y="-240"/><nail x="-304" y="-240"/></transition><transition><source ref="id4"/><target ref="id8"/><label kind="synchronisation" x="-360" y="160">LeaveSlave2?</label><nail x="-368" y="184"/><nail x="-368" y="-152"/></transition><transition><source ref="id4"/><target ref="id5"/><label kind="synchronisation" x="-104" y="88">TakeSlave?</label></transition><transition><source ref="id5"/><target ref="id6"/><label kind="synchronisation" x="-144" y="-56">ChangeSlave?</label><nail x="-112" y="-56"/></transition><transition><source ref="id6"/><target ref="id8"/><label kind="synchronisation" x="-232" y="-160">LeaveMaster?</label><nail x="-184" y="-128"/></transition><transition><source ref="id5"/><target ref="id6"/><label kind="synchronisation" x="-56" y="-88">TakeMaster?</label><nail x="-48" y="-56"/></transition><transition><source ref="id6"/><target ref="id8"/><label kind="synchronisation" x="-232" y="-208">ChangeMaster?</label><nail x="-184" y="-192"/></transition><transition><source ref="id7"/><target ref="id4"/><label kind="synchronisation" x="-232" y="88">beSlave2?</label></transition><transition><source ref="id7"/><target ref="id5"/><label kind="synchronisation" x="-200" y="8">beSlave1?</label></transition><transition><source ref="id7"/><target ref="id6"/><label kind="synchronisation" x="-208" y="-72">beMaster?</label></transition><transition><source ref="id8"/><target ref="id7"/><label kind="synchronisation" x="-364" y="-107">appr[id]!</label><label kind="assignment" x="-364" y="-92">x=0</label></transition></template><template><name>speed_control</name><location id="id9" x="0" y="0"></location><init ref="id9"/></template><system>// Place template instantiations here.
Platooning = platooning();
Truck1 = truck(0);
Truck2 = truck(1);
Truck3 = truck(2);


// List one or more processes to be composed into a system.
system Truck1, Truck2, Truck3, Platooning;</system></nta>